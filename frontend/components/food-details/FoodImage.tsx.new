import React from 'react';
import { StyleSheet, Image, View } from 'react-native';
import * as FileSystem from 'expo-file-system';

interface FoodImageProps {
    imageUrl: string;
    localImageUri?: string;
    children?: React.ReactNode;
}

export const FoodImage: React.FC<FoodImageProps> = ({ imageUrl, localImageUri, children }) => {
    const [useLocalImage, setUseLocalImage] = React.useState(false);

    React.useEffect(() => {
        if (localImageUri) {
            FileSystem.getInfoAsync(localImageUri).then(info => {
                setUseLocalImage(info.exists);
            });
        }
    }, [localImageUri]);

    const imageSource = useLocalImage ? { uri: localImageUri } : { uri: imageUrl };
    console.log('Loading image from:', useLocalImage ? localImageUri : imageUrl);

    return (
        <View style={styles.imageWrapper}>
            <View style={styles.imageContainer}>
                <Image
                    source={imageSource}
                    style={styles.foodImage}
                    resizeMode="cover"
                />
            </View>
            {children && (
                <View style={styles.badgeContainer}>
                    {children}
                </View>
            )}
        </View>
    );
};

const styles = StyleSheet.create({
    imageWrapper: {
        alignItems: 'center',
        justifyContent: 'center',
        padding: 16,
        position: 'relative',
    },
    imageContainer: {
        width: 360,
        height: 360,
        borderRadius: 180,
        overflow: 'hidden',
        marginVertical: 16,
        position: 'relative',
        alignSelf: 'center',
    },
    foodImage: {
        width: '100%',
        height: '100%',
        borderRadius: 157,
    },
    badgeContainer: {
        position: 'absolute',
        left: 80,
        bottom: 30,
        zIndex: 10,
    },
});
